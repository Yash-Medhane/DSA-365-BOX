 void solve(TreeNode* temp,vector<int>&ans){
        if(temp == NULL) return;
        ans.push_back(temp->val);
        solve(temp->left,ans);
        solve(temp->right,ans);
    }
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int>ans;
        solve(root,ans);
        return ans;
    }


 vector<int> preorderTraversal(TreeNode* root) {
       vector<int>ans;
       if(!root) return ans;
       stack<TreeNode*>st;
       st.push(root);
       while(!st.empty()){
        root = st.top();
        st.pop();
        ans.push_back(root->val);
        if(root->right) st.push(root->right);
        if(root->left) st.push(root->left);
       }
       return ans;
    }