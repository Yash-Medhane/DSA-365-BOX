int maxDepth(TreeNode* root) {
        if (!root) return 0; 
        int left = maxDepth(root->left);
        int right = maxDepth(root->right);
        return max(left, right) + 1;
    }
    bool isBalanced(TreeNode* root) {
        if (!root) return true; // Base case: Null node
        int left =  maxDepth(root->left);  // Calculate left subtree depth
        int right =  maxDepth(root->right); // Calculate right subtree depth
        if(abs(left - right) > 1)return false;
        bool l = isBalanced(root->left);
        bool r = isBalanced(root->right);
        if(!l || !r) return false;
        return true;
    }