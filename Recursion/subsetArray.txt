class Solution {
public:
    void subsetSum(vector<vector<int>>&ans,vector<int>temp,vector<int>&nums,int i,int n){
        if(i == n){
            ans.push_back(temp);
            return;
        }
        subsetSum(ans,temp,nums,i+1,n);
        temp.push_back(nums[i]);
        subsetSum(ans,temp,nums,i+1,n);
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>>ans;
        vector<int>temp;
        subsetSum(ans,temp,nums,0,nums.size());

        set<vector<int>>unique;
        for(auto &num : ans){
            sort(num.begin(),num.end());
            unique.insert(num);
        }
        vector<vector<int>>result(unique.begin(),unique.end());
        return result;
    }
};