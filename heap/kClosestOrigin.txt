 vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        // Max heap to store distances and corresponding points
        priority_queue<pair<int, vector<int>>> maxHeap;
        
        for (auto& point : points) {
            int distance = point[0] * point[0] + point[1] * point[1];
            maxHeap.push({distance, point});
            if (maxHeap.size() > k) maxHeap.pop(); // Remove farthest point if size > k
        }
        
        vector<vector<int>> ans;
        while (!maxHeap.empty()) {
            ans.push_back(maxHeap.top().second);
            maxHeap.pop();
        }
        return ans;
    }