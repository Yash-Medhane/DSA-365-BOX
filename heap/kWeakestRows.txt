vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        priority_queue<pair<int,int>>maxHeap;
        int m = mat.size();
        int n = mat[0].size();
        for(int i=0;i<m;i++){
            int cnt = 0;
            for(int j=0;j<n;j++){
                if(mat[i][j] == 1) cnt++;
            }
            maxHeap.push({cnt,i});
            if(maxHeap.size() > k) maxHeap.pop();
        }
        vector<int>ans;
        while(!maxHeap.empty()){
            int row = maxHeap.top().second;
            ans.push_back(row);
            maxHeap.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }