class Solution {
public:
    vector<int> getFinalState(vector<int>& nums, int k, int mul) {
      priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
    for (int i = 0; i < nums.size(); i++) {
        pq.push({nums[i], i});
    } 
    while(k > 0){
       auto pair = pq.top();
       pq.pop();
       long val = pair.first;
       val *= mul;
       long index = pair.second;
       pq.push({val,index});
       k--;
    }
    while(!pq.empty()){
       auto pair = pq.top();
       pq.pop();
       int val = pair.first;
       int index = pair.second;
       nums[index] = val;
    }
    return nums;
    }
};