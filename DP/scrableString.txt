class Solution {
public:
    unordered_map<string,bool>memo;
    bool solve(string s1,string s2){
        string s = s1+" "+s2;
        if(s1==s2) return memo[s] = true;
        if(s1.size() <=1 || s2.size() <=1) return false;
        if(memo.find(s)!=memo.end()) return memo[s];
        int n2 = s2.size();
        bool flag = false;
        for(int i=1;i<s1.size();i++){
            bool cond1 = solve(s1.substr(0,i),s2.substr(n2-i)) && solve(s1.substr(i),s2.substr(0,n2-i));
            bool cond2 = solve(s1.substr(0,i),s2.substr(0,i)) && solve(s1.substr(i),s2.substr(i));
            if(cond1 || cond2){
                flag = true;
                break;
            }
        }
        return memo[s] = flag;
    }
    bool isScramble(string s1, string s2) {
        vector<int>cnt(26,0);
        for(int i=0;i<s1.size();i++){
            cnt[s1[i]-'a']++;
            cnt[s2[i]-'a']--;
        }
        for(int i=0;i<26;i++){
            if(cnt[i] != 0) return false;
        }
        return solve(s1,s2);
    }
};